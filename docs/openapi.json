{
  "openapi": "3.1.0",
  "info": {
    "title": "NexusWare WMS",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login",
        "operationId": "login_api_v1_users_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_v1_users_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/register": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Register User",
        "operationId": "register_user_api_v1_users_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/reset_password": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Reset Password",
        "operationId": "reset_password_api_v1_users_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_password_api_v1_users_reset_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/change_password": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Change User Password",
        "operationId": "change_user_password_api_v1_users_change_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_change_user_password_api_v1_users_change_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/me": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User Me",
        "operationId": "update_user_me_api_v1_users_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/permissions": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get All Permissions",
        "operationId": "get_all_permissions_api_v1_users_permissions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllPermissions"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/my_permissions": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get My Permissions",
        "operationId": "get_my_permissions_api_v1_users_my_permissions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllPermissions"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/roles": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get All Roles",
        "operationId": "get_all_roles_api_v1_users_roles_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllRoles"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users",
        "operationId": "read_users_api_v1_users__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Username"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSanitizedWithRole"
                  },
                  "title": "Response Read Users Api V1 Users  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "operationId": "create_user_api_v1_users__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSanitizedWithRole"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/permissions": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Permissions",
        "operationId": "get_user_permissions_api_v1_users__user_id__permissions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithPermissions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User Permissions",
        "operationId": "update_user_permissions_api_v1_users__user_id__permissions_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithPermissions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User",
        "operationId": "read_user_api_v1_users__user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSanitizedWithRole"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "operationId": "update_user_api_v1_users__user_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Create Inventory",
        "operationId": "create_inventory_api_v1_inventory__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Read Inventory",
        "operationId": "read_inventory_api_v1_inventory__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Product Id"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          },
          {
            "name": "sku",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sku"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "quantity_min",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Quantity Min"
            }
          },
          {
            "name": "quantity_max",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Quantity Max"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/transfer": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Transfer Inventory",
        "operationId": "transfer_inventory_api_v1_inventory_transfer_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryTransfer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/report": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Inventory Report",
        "operationId": "get_inventory_report_api_v1_inventory_report_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReport"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/cycle_count": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Perform Cycle Count",
        "operationId": "perform_cycle_count_api_v1_inventory_cycle_count_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Location Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryUpdate"
                },
                "title": "Counted Items"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Inventory"
                  },
                  "title": "Response Perform Cycle Count Api V1 Inventory Cycle Count Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/low_stock": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Low Stock Items",
        "operationId": "get_low_stock_items_api_v1_inventory_low_stock_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 10,
              "title": "Threshold"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductWithInventory"
                  },
                  "title": "Response Get Low Stock Items Api V1 Inventory Low Stock Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/out_of_stock": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Out Of Stock Items",
        "operationId": "get_out_of_stock_items_api_v1_inventory_out_of_stock_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "type": "array",
                  "title": "Response Get Out Of Stock Items Api V1 Inventory Out Of Stock Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/reorder": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Create Reorder List",
        "operationId": "create_reorder_list_api_v1_inventory_reorder_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 10,
              "title": "Threshold"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "title": "Response Create Reorder List Api V1 Inventory Reorder Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/product_locations/{product_id}": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Product Locations",
        "operationId": "get_product_locations_api_v1_inventory_product_locations__product_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationWithInventory"
                  },
                  "title": "Response Get Product Locations Api V1 Inventory Product Locations  Product Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/batch_update": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Batch Update Inventory",
        "operationId": "batch_update_inventory_api_v1_inventory_batch_update_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/InventoryUpdate"
                },
                "type": "array",
                "title": "Updates"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Inventory"
                  },
                  "type": "array",
                  "title": "Response Batch Update Inventory Api V1 Inventory Batch Update Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/movement_history/{product_id}": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Inventory Movement History",
        "operationId": "get_inventory_movement_history_api_v1_inventory_movement_history__product_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryMovement"
                  },
                  "title": "Response Get Inventory Movement History Api V1 Inventory Movement History  Product Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/summary": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Inventory Summary",
        "operationId": "get_inventory_summary_api_v1_inventory_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/stocktake": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Perform Stocktake",
        "operationId": "perform_stocktake_api_v1_inventory_stocktake_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StocktakeCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StocktakeResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/abc_analysis": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Perform Abc Analysis",
        "operationId": "perform_abc_analysis_api_v1_inventory_abc_analysis_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ABCAnalysisResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/optimize_locations": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Optimize Inventory Locations",
        "operationId": "optimize_inventory_locations_api_v1_inventory_optimize_locations_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InventoryLocationSuggestion"
                  },
                  "type": "array",
                  "title": "Response Optimize Inventory Locations Api V1 Inventory Optimize Locations Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/expiring_soon": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Expiring Soon Inventory",
        "operationId": "get_expiring_soon_inventory_api_v1_inventory_expiring_soon_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days to consider for expiration",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days to consider for expiration"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductWithInventory"
                  },
                  "title": "Response Get Expiring Soon Inventory Api V1 Inventory Expiring Soon Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/bulk_import": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Bulk Import Inventory",
        "operationId": "bulk_import_inventory_api_v1_inventory_bulk_import_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkImportData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkImportResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/storage_utilization": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Storage Utilization",
        "operationId": "get_storage_utilization_api_v1_inventory_storage_utilization_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUtilization"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/forecast/{product_id}": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Inventory Forecast",
        "operationId": "get_inventory_forecast_api_v1_inventory_forecast__product_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Inventory Forecast Api V1 Inventory Forecast  Product Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Generate Inventory Forecast",
        "operationId": "generate_inventory_forecast_api_v1_inventory_forecast__product_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Generate Inventory Forecast Api V1 Inventory Forecast  Product Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/reorder_suggestions": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Reorder Suggestions",
        "operationId": "get_reorder_suggestions_api_v1_inventory_reorder_suggestions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Reorder Suggestions Api V1 Inventory Reorder Suggestions Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/{id}": {
      "delete": {
        "tags": [
          "inventory"
        ],
        "summary": "Delete Inventory Item",
        "operationId": "delete_inventory_item_api_v1_inventory__id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Read Inventory Item",
        "operationId": "read_inventory_item_api_v1_inventory__id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "inventory"
        ],
        "summary": "Update Inventory",
        "operationId": "update_inventory_api_v1_inventory__id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/{id}/adjust": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Adjust Inventory",
        "operationId": "adjust_inventory_api_v1_inventory__id__adjust_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create Order",
        "operationId": "create_order_api_v1_orders__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Read Orders",
        "operationId": "read_orders_api_v1_orders__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Customer Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/OrderStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "order_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order Date From"
            }
          },
          {
            "name": "order_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order Date To"
            }
          },
          {
            "name": "ship_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ship Date From"
            }
          },
          {
            "name": "ship_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ship Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderWithDetails"
                  },
                  "title": "Response Read Orders Api V1 Orders  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/summary": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get Order Summary",
        "operationId": "get_order_summary_api_v1_orders_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/backorders": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get Backorders",
        "operationId": "get_backorders_api_v1_orders_backorders_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  },
                  "type": "array",
                  "title": "Response Get Backorders Api V1 Orders Backorders Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/orders/bulk_import": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Bulk Import Orders",
        "operationId": "bulk_import_orders_api_v1_orders_bulk_import_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkImportData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkImportResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/orders/processing_times": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get Order Processing Times",
        "operationId": "get_order_processing_times_api_v1_orders_processing_times_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderProcessingTimes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}/items": {
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "Update Order Items",
        "operationId": "update_order_items_api_v1_orders__order_id__items_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderItemUpdate"
                },
                "title": "Items"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Read Order",
        "operationId": "read_order_api_v1_orders__order_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderWithDetails"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "Update Order",
        "operationId": "update_order_api_v1_orders__order_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "summary": "Delete Order",
        "operationId": "delete_order_api_v1_orders__order_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}/cancel": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Cancel Order",
        "operationId": "cancel_order_api_v1_orders__order_id__cancel_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}/ship": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Ship Order",
        "operationId": "ship_order_api_v1_orders__order_id__ship_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}/cancel_item": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Cancel Order Item",
        "operationId": "cancel_order_item_api_v1_orders__order_id__cancel_item_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_cancel_order_item_api_v1_orders__order_id__cancel_item_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}/add_item": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Add Order Item",
        "operationId": "add_order_item_api_v1_orders__order_id__add_item_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warehouse/layout": {
      "get": {
        "tags": [
          "warehouse"
        ],
        "summary": "Get Warehouse Layout",
        "operationId": "get_warehouse_layout_api_v1_warehouse_layout_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseLayout"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/warehouse/stats": {
      "get": {
        "tags": [
          "warehouse"
        ],
        "summary": "Get Warehouse Stats",
        "operationId": "get_warehouse_stats_api_v1_warehouse_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/warehouse/inventory/{location_id}": {
      "get": {
        "tags": [
          "warehouse"
        ],
        "summary": "Get Location Inventory",
        "operationId": "get_location_inventory_api_v1_warehouse_inventory__location_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the location to get inventory for"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationInventory"
                  },
                  "title": "Response Get Location Inventory Api V1 Warehouse Inventory  Location Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warehouse/inventory/{location_id}/{product_id}": {
      "put": {
        "tags": [
          "warehouse"
        ],
        "summary": "Update Location Inventory",
        "operationId": "update_location_inventory_api_v1_warehouse_inventory__location_id___product_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the location"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the product"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LocationInventoryUpdate"
                  }
                ],
                "title": "Inventory update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationInventory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warehouse/inventory/move": {
      "post": {
        "tags": [
          "warehouse"
        ],
        "summary": "Move Inventory",
        "operationId": "move_inventory_api_v1_warehouse_inventory_move_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryMovement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryMovement"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/warehouse/inventory/adjust": {
      "post": {
        "tags": [
          "warehouse"
        ],
        "summary": "Adjust Inventory",
        "operationId": "adjust_inventory_api_v1_warehouse_inventory_adjust_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/yard/locations": {
      "post": {
        "tags": [
          "yard"
        ],
        "summary": "Create Yard Location",
        "operationId": "create_yard_location_api_v1_yard_locations_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/YardLocationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YardLocation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "yard"
        ],
        "summary": "Read Yard Locations",
        "operationId": "read_yard_locations_api_v1_yard_locations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/YardLocationType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/YardLocationStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/YardLocation"
                  },
                  "title": "Response Read Yard Locations Api V1 Yard Locations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yard/locations/{location_id}": {
      "get": {
        "tags": [
          "yard"
        ],
        "summary": "Read Yard Location",
        "operationId": "read_yard_location_api_v1_yard_locations__location_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the yard location to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YardLocationWithAppointments"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "yard"
        ],
        "summary": "Update Yard Location",
        "operationId": "update_yard_location_api_v1_yard_locations__location_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the yard location to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/YardLocationUpdate"
                  }
                ],
                "title": "Yard location update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YardLocation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "yard"
        ],
        "summary": "Delete Yard Location",
        "operationId": "delete_yard_location_api_v1_yard_locations__location_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the yard location to delete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YardLocation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yard/appointments": {
      "post": {
        "tags": [
          "yard"
        ],
        "summary": "Create Dock Appointment",
        "operationId": "create_dock_appointment_api_v1_yard_appointments_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DockAppointmentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DockAppointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "yard"
        ],
        "summary": "Read Dock Appointments",
        "operationId": "read_dock_appointments_api_v1_yard_appointments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "yard_location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Yard Location Id"
            }
          },
          {
            "name": "carrier_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Carrier Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/YardLocationType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/YardLocationStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DockAppointment"
                  },
                  "title": "Response Read Dock Appointments Api V1 Yard Appointments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yard/appointments/{appointment_id}": {
      "get": {
        "tags": [
          "yard"
        ],
        "summary": "Read Dock Appointment",
        "operationId": "read_dock_appointment_api_v1_yard_appointments__appointment_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the dock appointment to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DockAppointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "yard"
        ],
        "summary": "Update Dock Appointment",
        "operationId": "update_dock_appointment_api_v1_yard_appointments__appointment_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the dock appointment to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DockAppointmentUpdate"
                  }
                ],
                "title": "Dock appointment update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DockAppointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "yard"
        ],
        "summary": "Delete Dock Appointment",
        "operationId": "delete_dock_appointment_api_v1_yard_appointments__appointment_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the dock appointment to delete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DockAppointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yard/utilization": {
      "get": {
        "tags": [
          "yard"
        ],
        "summary": "Get Yard Utilization",
        "operationId": "get_yard_utilization_api_v1_yard_utilization_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YardUtilizationReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yard/carrier_performance": {
      "get": {
        "tags": [
          "yard"
        ],
        "summary": "Get Carrier Performance",
        "operationId": "get_carrier_performance_api_v1_yard_carrier_performance_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarrierPerformance"
                  },
                  "title": "Response Get Carrier Performance Api V1 Yard Carrier Performance Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yard/check_availability": {
      "post": {
        "tags": [
          "yard"
        ],
        "summary": "Check Appointment Availability",
        "operationId": "check_appointment_availability_api_v1_yard_check_availability_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DockAppointmentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AppointmentConflict"
                  },
                  "type": "array",
                  "title": "Response Check Appointment Availability Api V1 Yard Check Availability Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/assets/": {
      "post": {
        "tags": [
          "assets"
        ],
        "summary": "Create Asset",
        "operationId": "create_asset_api_v1_assets__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Read Assets",
        "operationId": "read_assets_api_v1_assets__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "asset_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asset Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "purchase_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Purchase Date From"
            }
          },
          {
            "name": "purchase_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Purchase Date To"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetWithMaintenanceList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/types": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Read Asset Types",
        "operationId": "read_asset_types_api_v1_assets_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Read Asset Types Api V1 Assets Types Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/assets/statuses": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Read Asset Statuses",
        "operationId": "read_asset_statuses_api_v1_assets_statuses_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Read Asset Statuses Api V1 Assets Statuses Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/assets/maintenance": {
      "post": {
        "tags": [
          "assets"
        ],
        "summary": "Create Asset Maintenance",
        "operationId": "create_asset_maintenance_api_v1_assets_maintenance_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetMaintenanceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetMaintenance"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Read Asset Maintenances",
        "operationId": "read_asset_maintenances_api_v1_assets_maintenance_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "asset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asset Id"
            }
          },
          {
            "name": "maintenance_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Maintenance Type"
            }
          },
          {
            "name": "scheduled_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scheduled Date From"
            }
          },
          {
            "name": "scheduled_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scheduled Date To"
            }
          },
          {
            "name": "completed_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Completed Date From"
            }
          },
          {
            "name": "completed_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Completed Date To"
            }
          },
          {
            "name": "performed_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Performed By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetMaintenance"
                  },
                  "title": "Response Read Asset Maintenances Api V1 Assets Maintenance Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/maintenance/{maintenance_id}": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Read Asset Maintenance",
        "operationId": "read_asset_maintenance_api_v1_assets_maintenance__maintenance_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "maintenance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Maintenance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetMaintenance"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "assets"
        ],
        "summary": "Update Asset Maintenance",
        "operationId": "update_asset_maintenance_api_v1_assets_maintenance__maintenance_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "maintenance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Maintenance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetMaintenanceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetMaintenance"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assets"
        ],
        "summary": "Delete Asset Maintenance",
        "operationId": "delete_asset_maintenance_api_v1_assets_maintenance__maintenance_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "maintenance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Maintenance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetMaintenance"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/maintenance/types": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Read Maintenance Types",
        "operationId": "read_maintenance_types_api_v1_assets_maintenance_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Read Maintenance Types Api V1 Assets Maintenance Types Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/assets/{asset_id}/maintenance_history": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Read Asset Maintenance History",
        "operationId": "read_asset_maintenance_history_api_v1_assets__asset_id__maintenance_history_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetMaintenance"
                  },
                  "title": "Response Read Asset Maintenance History Api V1 Assets  Asset Id  Maintenance History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/{asset_id}/schedule_maintenance": {
      "post": {
        "tags": [
          "assets"
        ],
        "summary": "Schedule Asset Maintenance",
        "operationId": "schedule_asset_maintenance_api_v1_assets__asset_id__schedule_maintenance_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetMaintenanceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetMaintenance"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/maintenance/{maintenance_id}/complete": {
      "put": {
        "tags": [
          "assets"
        ],
        "summary": "Complete Asset Maintenance",
        "operationId": "complete_asset_maintenance_api_v1_assets_maintenance__maintenance_id__complete_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "maintenance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Maintenance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetMaintenanceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetMaintenance"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/due_for_maintenance": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Get Assets Due For Maintenance",
        "operationId": "get_assets_due_for_maintenance_api_v1_assets_due_for_maintenance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AssetWithMaintenance"
                  },
                  "type": "array",
                  "title": "Response Get Assets Due For Maintenance Api V1 Assets Due For Maintenance Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/assets/{asset_id}": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Read Asset",
        "operationId": "read_asset_api_v1_assets__asset_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetWithMaintenance"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "assets"
        ],
        "summary": "Update Asset",
        "operationId": "update_asset_api_v1_assets__asset_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assets"
        ],
        "summary": "Delete Asset",
        "operationId": "delete_asset_api_v1_assets__asset_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/{asset_id}/current_location": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Get Asset Current Location",
        "operationId": "get_asset_current_location_api_v1_assets__asset_id__current_location_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/{asset_id}/transfer": {
      "post": {
        "tags": [
          "assets"
        ],
        "summary": "Transfer Asset",
        "operationId": "transfer_asset_api_v1_assets__asset_id__transfer_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTransfer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/checks": {
      "post": {
        "tags": [
          "quality"
        ],
        "summary": "Create Quality Check",
        "operationId": "create_quality_check_api_v1_quality_checks_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualityCheckCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityCheck"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "quality"
        ],
        "summary": "Read Quality Checks",
        "operationId": "read_quality_checks_api_v1_quality_checks_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Product Id"
            }
          },
          {
            "name": "performed_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Performed By"
            }
          },
          {
            "name": "result",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Result"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QualityCheckWithProduct"
                  },
                  "title": "Response Read Quality Checks Api V1 Quality Checks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/checks/{check_id}": {
      "get": {
        "tags": [
          "quality"
        ],
        "summary": "Read Quality Check",
        "operationId": "read_quality_check_api_v1_quality_checks__check_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the quality check to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityCheckWithProduct"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "quality"
        ],
        "summary": "Update Quality Check",
        "operationId": "update_quality_check_api_v1_quality_checks__check_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the quality check to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/QualityCheckUpdate"
                  }
                ],
                "title": "Quality check update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityCheck"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "quality"
        ],
        "summary": "Delete Quality Check",
        "operationId": "delete_quality_check_api_v1_quality_checks__check_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the quality check to delete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityCheck"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/metrics": {
      "get": {
        "tags": [
          "quality"
        ],
        "summary": "Get Quality Metrics",
        "operationId": "get_quality_metrics_api_v1_quality_metrics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityMetrics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/standards": {
      "post": {
        "tags": [
          "quality"
        ],
        "summary": "Create Quality Standard",
        "operationId": "create_quality_standard_api_v1_quality_standards_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualityStandardCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityStandard"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "quality"
        ],
        "summary": "Read Quality Standards",
        "operationId": "read_quality_standards_api_v1_quality_standards_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QualityStandard"
                  },
                  "title": "Response Read Quality Standards Api V1 Quality Standards Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/standards/{standard_id}": {
      "get": {
        "tags": [
          "quality"
        ],
        "summary": "Read Quality Standard",
        "operationId": "read_quality_standard_api_v1_quality_standards__standard_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "standard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the quality standard to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityStandard"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "quality"
        ],
        "summary": "Update Quality Standard",
        "operationId": "update_quality_standard_api_v1_quality_standards__standard_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "standard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the quality standard to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/QualityStandardUpdate"
                  }
                ],
                "title": "Quality standard update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityStandard"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "quality"
        ],
        "summary": "Delete Quality Standard",
        "operationId": "delete_quality_standard_api_v1_quality_standards__standard_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "standard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the quality standard to delete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityStandard"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/alerts": {
      "post": {
        "tags": [
          "quality"
        ],
        "summary": "Create Quality Alert",
        "operationId": "create_quality_alert_api_v1_quality_alerts_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualityAlertCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityAlert"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "quality"
        ],
        "summary": "Read Quality Alerts",
        "operationId": "read_quality_alerts_api_v1_quality_alerts_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QualityAlert"
                  },
                  "title": "Response Read Quality Alerts Api V1 Quality Alerts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/alerts/{alert_id}/resolve": {
      "put": {
        "tags": [
          "quality"
        ],
        "summary": "Resolve Quality Alert",
        "operationId": "resolve_quality_alert_api_v1_quality_alerts__alert_id__resolve_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the quality alert to resolve"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/QualityAlertUpdate"
                  }
                ],
                "title": "Quality alert update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityAlert"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/product/{product_id}/history": {
      "get": {
        "tags": [
          "quality"
        ],
        "summary": "Get Product Quality History",
        "operationId": "get_product_quality_history_api_v1_quality_product__product_id__history_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the product to get quality history for"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QualityCheckWithProduct"
                  },
                  "title": "Response Get Product Quality History Api V1 Quality Product  Product Id  History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/checks/summary": {
      "get": {
        "tags": [
          "quality"
        ],
        "summary": "Get Quality Check Summary",
        "operationId": "get_quality_check_summary_api_v1_quality_checks_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "title": "Response Get Quality Check Summary Api V1 Quality Checks Summary Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/product/{product_id}/standards": {
      "get": {
        "tags": [
          "quality"
        ],
        "summary": "Get Product Quality Standards",
        "operationId": "get_product_quality_standards_api_v1_quality_product__product_id__standards_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the product to get quality standards for"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QualityStandard"
                  },
                  "title": "Response Get Product Quality Standards Api V1 Quality Product  Product Id  Standards Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/batch_check": {
      "post": {
        "tags": [
          "quality"
        ],
        "summary": "Create Batch Quality Check",
        "operationId": "create_batch_quality_check_api_v1_quality_batch_check_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/QualityCheckCreate"
                },
                "type": "array",
                "title": "Checks"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/QualityCheck"
                  },
                  "type": "array",
                  "title": "Response Create Batch Quality Check Api V1 Quality Batch Check Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/quality/alerts/active": {
      "get": {
        "tags": [
          "quality"
        ],
        "summary": "Get Active Quality Alerts",
        "operationId": "get_active_quality_alerts_api_v1_quality_alerts_active_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QualityAlert"
                  },
                  "title": "Response Get Active Quality Alerts Api V1 Quality Alerts Active Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/checks/{check_id}/comment": {
      "post": {
        "tags": [
          "quality"
        ],
        "summary": "Add Comment To Quality Check",
        "operationId": "add_comment_to_quality_check_api_v1_quality_checks__check_id__comment_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the quality check to comment on"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/QualityCheckCommentCreate"
                  }
                ],
                "title": "Quality check comment data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityCheckComment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quality/reports/defect_rate": {
      "get": {
        "tags": [
          "quality"
        ],
        "summary": "Get Product Defect Rates",
        "operationId": "get_product_defect_rates_api_v1_quality_reports_defect_rate_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDefectRate"
                  },
                  "title": "Response Get Product Defect Rates Api V1 Quality Reports Defect Rate Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Create Task",
        "operationId": "create_task_api_v1_tasks__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Read Tasks",
        "operationId": "read_tasks_api_v1_tasks__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "task_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Task Type"
            }
          },
          {
            "name": "assigned_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Assigned To"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskPriority"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Priority"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "due_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Due Date From"
            }
          },
          {
            "name": "due_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Due Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskWithAssignee"
                  },
                  "title": "Response Read Tasks Api V1 Tasks  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/statistics": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get Task Statistics",
        "operationId": "get_task_statistics_api_v1_tasks_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/tasks/user_summary": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get User Task Summary",
        "operationId": "get_user_task_summary_api_v1_tasks_user_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserTaskSummary"
                  },
                  "type": "array",
                  "title": "Response Get User Task Summary Api V1 Tasks User Summary Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/tasks/overdue": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get Overdue Tasks",
        "operationId": "get_overdue_tasks_api_v1_tasks_overdue_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskWithAssignee"
                  },
                  "title": "Response Get Overdue Tasks Api V1 Tasks Overdue Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/batch_create": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Create Batch Tasks",
        "operationId": "create_batch_tasks_api_v1_tasks_batch_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/TaskCreate"
                },
                "type": "array",
                "title": "Tasks"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  },
                  "type": "array",
                  "title": "Response Create Batch Tasks Api V1 Tasks Batch Create Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/tasks/my_tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get My Tasks",
        "operationId": "get_my_tasks_api_v1_tasks_my_tasks_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  },
                  "title": "Response Get My Tasks Api V1 Tasks My Tasks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Read Task",
        "operationId": "read_task_api_v1_tasks__task_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the task to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskWithAssignee"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tasks"
        ],
        "summary": "Update Task",
        "operationId": "update_task_api_v1_tasks__task_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the task to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdate"
                  }
                ],
                "title": "Task update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Delete Task",
        "operationId": "delete_task_api_v1_tasks__task_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the task to delete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/complete": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Complete Task",
        "operationId": "complete_task_api_v1_tasks__task_id__complete_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the task to complete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/comment": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Add Task Comment",
        "operationId": "add_task_comment_api_v1_tasks__task_id__comment_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the task to comment on"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCommentCreate"
                  }
                ],
                "title": "Task comment data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskComment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/comments": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get Task Comments",
        "operationId": "get_task_comments_api_v1_tasks__task_id__comments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the task to get comments for"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskComment"
                  },
                  "title": "Response Get Task Comments Api V1 Tasks  Task Id  Comments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/logs": {
      "post": {
        "tags": [
          "audit"
        ],
        "summary": "Create Audit Log",
        "operationId": "create_audit_log_api_v1_audit_logs_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "audit"
        ],
        "summary": "Read Audit Logs",
        "operationId": "read_audit_logs_api_v1_audit_logs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "action_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Action Type"
            }
          },
          {
            "name": "table_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Table Name"
            }
          },
          {
            "name": "record_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Record Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLogWithUser"
                  },
                  "title": "Response Read Audit Logs Api V1 Audit Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/logs/{log_id}": {
      "get": {
        "tags": [
          "audit"
        ],
        "summary": "Read Audit Log",
        "operationId": "read_audit_log_api_v1_audit_logs__log_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "log_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the audit log to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogWithUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/logs/summary": {
      "get": {
        "tags": [
          "audit"
        ],
        "summary": "Get Audit Summary",
        "operationId": "get_audit_summary_api_v1_audit_logs_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/logs/user/{user_id}": {
      "get": {
        "tags": [
          "audit"
        ],
        "summary": "Get User Audit Logs",
        "operationId": "get_user_audit_logs_api_v1_audit_logs_user__user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the user to get audit logs for"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLog"
                  },
                  "title": "Response Get User Audit Logs Api V1 Audit Logs User  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/logs/table/{table_name}": {
      "get": {
        "tags": [
          "audit"
        ],
        "summary": "Get Table Audit Logs",
        "operationId": "get_table_audit_logs_api_v1_audit_logs_table__table_name__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "table_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The name of the table to get audit logs for"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLog"
                  },
                  "title": "Response Get Table Audit Logs Api V1 Audit Logs Table  Table Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/logs/record/{table_name}/{record_id}": {
      "get": {
        "tags": [
          "audit"
        ],
        "summary": "Get Record Audit Logs",
        "operationId": "get_record_audit_logs_api_v1_audit_logs_record__table_name___record_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "table_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The name of the table"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the record to get audit logs for"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLog"
                  },
                  "title": "Response Get Record Audit Logs Api V1 Audit Logs Record  Table Name   Record Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/logs/export": {
      "get": {
        "tags": [
          "audit"
        ],
        "summary": "Export Audit Logs",
        "operationId": "export_audit_logs_api_v1_audit_logs_export_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogExport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/logs/actions": {
      "get": {
        "tags": [
          "audit"
        ],
        "summary": "Get Audit Log Actions",
        "operationId": "get_audit_log_actions_api_v1_audit_logs_actions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Get Audit Log Actions Api V1 Audit Logs Actions Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/audit/logs/tables": {
      "get": {
        "tags": [
          "audit"
        ],
        "summary": "Get Audited Tables",
        "operationId": "get_audited_tables_api_v1_audit_logs_tables_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Get Audited Tables Api V1 Audit Logs Tables Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/reports/inventory_summary": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Inventory Summary",
        "operationId": "get_inventory_summary_api_v1_reports_inventory_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryReport"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/reports/order_summary": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Order Summary",
        "operationId": "get_order_summary_api_v1_reports_order_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderSummaryReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/warehouse_performance": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Warehouse Performance",
        "operationId": "get_warehouse_performance_api_v1_reports_warehouse_performance_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehousePerformanceReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/kpi_dashboard": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Kpi Dashboard",
        "operationId": "get_kpi_dashboard_api_v1_reports_kpi_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KPIDashboard"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/search/products": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Search Products",
        "operationId": "search_products_api_v1_search_products_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query string",
              "title": "Q"
            },
            "description": "Search query string"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category Id"
            }
          },
          {
            "name": "min_price",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Price"
            }
          },
          {
            "name": "max_price",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Price"
            }
          },
          {
            "name": "in_stock",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "In Stock"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "asc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "title": "Response Search Products Api V1 Search Products Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/orders": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Search Orders",
        "operationId": "search_orders_api_v1_search_orders_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query string",
              "title": "Q"
            },
            "description": "Search query string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "min_total",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Total"
            }
          },
          {
            "name": "max_total",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Total"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "asc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  },
                  "title": "Response Search Orders Api V1 Search Orders Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Create Product",
        "operationId": "create_product_api_v1_products__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Read Products",
        "operationId": "read_products_api_v1_products__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category Id"
            }
          },
          {
            "name": "sku",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sku"
            }
          },
          {
            "name": "barcode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Barcode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductWithCategoryAndInventory"
                  },
                  "title": "Response Read Products Api V1 Products  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/max_id": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get Max Product Id",
        "operationId": "get_max_product_id_api_v1_products_max_id_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Get Max Product Id Api V1 Products Max Id Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/products/barcode": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Get Product By Barcode",
        "operationId": "get_product_by_barcode_api_v1_products_barcode_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/products/{product_id}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Read Product",
        "operationId": "read_product_api_v1_products__product_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWithCategoryAndInventory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Update Product",
        "operationId": "update_product_api_v1_products__product_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Delete Product",
        "operationId": "delete_product_api_v1_products__product_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{product_id}/substitutes": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get Product Substitutes",
        "operationId": "get_product_substitutes_api_v1_products__product_id__substitutes_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "title": "Response Get Product Substitutes Api V1 Products  Product Id  Substitutes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Add Product Substitute",
        "operationId": "add_product_substitute_api_v1_products__product_id__substitutes_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_product_substitute_api_v1_products__product_id__substitutes_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/": {
      "post": {
        "tags": [
          "customers"
        ],
        "summary": "Create Customer",
        "operationId": "create_customer_api_v1_customers__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Read Customers",
        "operationId": "read_customers_api_v1_customers__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  },
                  "title": "Response Read Customers Api V1 Customers  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/{customer_id}": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Read Customer",
        "operationId": "read_customer_api_v1_customers__customer_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "customers"
        ],
        "summary": "Update Customer",
        "operationId": "update_customer_api_v1_customers__customer_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customers"
        ],
        "summary": "Delete Customer",
        "operationId": "delete_customer_api_v1_customers__customer_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/{customer_id}/orders": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Read Customer Orders",
        "operationId": "read_customer_orders_api_v1_customers__customer_id__orders_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Customer Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  },
                  "title": "Response Read Customer Orders Api V1 Customers  Customer Id  Orders Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase_orders/": {
      "post": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Create Purchase Order",
        "operationId": "create_purchase_order_api_v1_purchase_orders__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Read Purchase Orders",
        "operationId": "read_purchase_orders_api_v1_purchase_orders__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "supplier_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Supplier Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/OrderStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderWithDetails"
                  },
                  "title": "Response Read Purchase Orders Api V1 Purchase Orders  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase_orders/{po_id}": {
      "get": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Read Purchase Order",
        "operationId": "read_purchase_order_api_v1_purchase_orders__po_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "po_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Po Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderWithDetails"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Update Purchase Order",
        "operationId": "update_purchase_order_api_v1_purchase_orders__po_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "po_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Po Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Delete Purchase Order",
        "operationId": "delete_purchase_order_api_v1_purchase_orders__po_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "po_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Po Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase_orders/{po_id}/receive": {
      "post": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Receive Purchase Order",
        "operationId": "receive_purchase_order_api_v1_purchase_orders__po_id__receive_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "po_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Po Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/POItemReceive"
                },
                "title": "Received Items"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/suppliers/": {
      "post": {
        "tags": [
          "suppliers"
        ],
        "summary": "Create Supplier",
        "operationId": "create_supplier_api_v1_suppliers__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "Read Suppliers",
        "operationId": "read_suppliers_api_v1_suppliers__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "contact_person",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Contact Person"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Supplier"
                  },
                  "title": "Response Read Suppliers Api V1 Suppliers  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/suppliers/{supplier_id}": {
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "Read Supplier",
        "operationId": "read_supplier_api_v1_suppliers__supplier_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "supplier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Supplier Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "suppliers"
        ],
        "summary": "Update Supplier",
        "operationId": "update_supplier_api_v1_suppliers__supplier_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "supplier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Supplier Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "suppliers"
        ],
        "summary": "Delete Supplier",
        "operationId": "delete_supplier_api_v1_suppliers__supplier_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "supplier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Supplier Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/suppliers/{supplier_id}/purchase_orders": {
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "Read Supplier Purchase Orders",
        "operationId": "read_supplier_purchase_orders_api_v1_suppliers__supplier_id__purchase_orders_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "supplier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Supplier Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrder"
                  },
                  "title": "Response Read Supplier Purchase Orders Api V1 Suppliers  Supplier Id  Purchase Orders Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/po_items/": {
      "get": {
        "tags": [
          "po_items"
        ],
        "summary": "Read Po Items",
        "operationId": "read_po_items_api_v1_po_items__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/POItem"
                  },
                  "title": "Response Read Po Items Api V1 Po Items  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/po_items/by_product/{product_id}": {
      "get": {
        "tags": [
          "po_items"
        ],
        "summary": "Read Po Items By Product",
        "operationId": "read_po_items_by_product_api_v1_po_items_by_product__product_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the product to filter by"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/POItem"
                  },
                  "title": "Response Read Po Items By Product Api V1 Po Items By Product  Product Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/po_items/pending_receipt": {
      "get": {
        "tags": [
          "po_items"
        ],
        "summary": "Read Pending Receipt Po Items",
        "operationId": "read_pending_receipt_po_items_api_v1_po_items_pending_receipt_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/POItem"
                  },
                  "title": "Response Read Pending Receipt Po Items Api V1 Po Items Pending Receipt Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/po_items/{po_item_id}": {
      "get": {
        "tags": [
          "po_items"
        ],
        "summary": "Read Po Item",
        "operationId": "read_po_item_api_v1_po_items__po_item_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "po_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the PO item to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "po_items"
        ],
        "summary": "Update Po Item",
        "operationId": "update_po_item_api_v1_po_items__po_item_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "po_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the PO item to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/POItemUpdate"
                  }
                ],
                "title": "PO Item update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/carriers/": {
      "post": {
        "tags": [
          "carriers"
        ],
        "summary": "Create Carrier",
        "operationId": "create_carrier_api_v1_carriers__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarrierCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "carriers"
        ],
        "summary": "Read Carriers",
        "operationId": "read_carriers_api_v1_carriers__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carrier"
                  },
                  "title": "Response Read Carriers Api V1 Carriers  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/carriers/{carrier_id}": {
      "get": {
        "tags": [
          "carriers"
        ],
        "summary": "Read Carrier",
        "operationId": "read_carrier_api_v1_carriers__carrier_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "carrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the carrier to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "carriers"
        ],
        "summary": "Update Carrier",
        "operationId": "update_carrier_api_v1_carriers__carrier_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "carrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the carrier to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CarrierUpdate"
                  }
                ],
                "title": "Carrier update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "carriers"
        ],
        "summary": "Delete Carrier",
        "operationId": "delete_carrier_api_v1_carriers__carrier_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "carrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the carrier to delete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/": {
      "post": {
        "tags": [
          "locations"
        ],
        "summary": "Create Location",
        "operationId": "create_location_api_v1_locations__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Read Locations",
        "operationId": "read_locations_api_v1_locations__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "zone_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Zone Id"
            }
          },
          {
            "name": "aisle",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aisle"
            }
          },
          {
            "name": "rack",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rack"
            }
          },
          {
            "name": "shelf",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Shelf"
            }
          },
          {
            "name": "bin",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Bin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationWithInventory"
                  },
                  "title": "Response Read Locations Api V1 Locations  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/{location_id}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Read Location",
        "operationId": "read_location_api_v1_locations__location_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationWithInventory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "locations"
        ],
        "summary": "Update Location",
        "operationId": "update_location_api_v1_locations__location_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Location Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "locations"
        ],
        "summary": "Delete Location",
        "operationId": "delete_location_api_v1_locations__location_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/zones/": {
      "post": {
        "tags": [
          "zones"
        ],
        "summary": "Create Zone",
        "operationId": "create_zone_api_v1_zones__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoneCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "zones"
        ],
        "summary": "Read Zones",
        "operationId": "read_zones_api_v1_zones__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ZoneWithLocations"
                  },
                  "title": "Response Read Zones Api V1 Zones  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/zones/{zone_id}": {
      "get": {
        "tags": [
          "zones"
        ],
        "summary": "Read Zone",
        "operationId": "read_zone_api_v1_zones__zone_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "zone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Zone Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneWithLocations"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zones"
        ],
        "summary": "Update Zone",
        "operationId": "update_zone_api_v1_zones__zone_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "zone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Zone Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoneUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zones"
        ],
        "summary": "Delete Zone",
        "operationId": "delete_zone_api_v1_zones__zone_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "zone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Zone Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Read Roles",
        "operationId": "read_roles_api_v1_roles__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  },
                  "title": "Response Read Roles Api V1 Roles  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{role_id}": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Read Role",
        "operationId": "read_role_api_v1_roles__role_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "roles"
        ],
        "summary": "Update Role",
        "operationId": "update_role_api_v1_roles__role_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "roles"
        ],
        "summary": "Delete Role",
        "operationId": "delete_role_api_v1_roles__role_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shipments/": {
      "post": {
        "tags": [
          "shipments"
        ],
        "summary": "Create Shipment",
        "operationId": "create_shipment_api_v1_shipments__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "shipments"
        ],
        "summary": "Read Shipments",
        "operationId": "read_shipments_api_v1_shipments__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ShipmentStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "order_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order Id"
            }
          },
          {
            "name": "carrier_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Carrier Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shipment"
                  },
                  "title": "Response Read Shipments Api V1 Shipments  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shipments/carrier_rates": {
      "get": {
        "tags": [
          "shipments"
        ],
        "summary": "Get Carrier Rates",
        "operationId": "get_carrier_rates_api_v1_shipments_carrier_rates_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "weight",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Weight"
            }
          },
          {
            "name": "dimensions",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dimensions"
            }
          },
          {
            "name": "destination_zip",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Destination Zip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarrierRate"
                  },
                  "title": "Response Get Carrier Rates Api V1 Shipments Carrier Rates Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shipments/{shipment_id}": {
      "get": {
        "tags": [
          "shipments"
        ],
        "summary": "Read Shipment",
        "operationId": "read_shipment_api_v1_shipments__shipment_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the shipment to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "shipments"
        ],
        "summary": "Update Shipment",
        "operationId": "update_shipment_api_v1_shipments__shipment_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the shipment to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ShipmentUpdate"
                  }
                ],
                "title": "Shipment update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "shipments"
        ],
        "summary": "Delete Shipment",
        "operationId": "delete_shipment_api_v1_shipments__shipment_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the shipment to delete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shipments/{shipment_id}/generate_label": {
      "post": {
        "tags": [
          "shipments"
        ],
        "summary": "Generate Shipping Label",
        "operationId": "generate_shipping_label_api_v1_shipments__shipment_id__generate_label_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Shipment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingLabel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shipments/{shipment_id}/details": {
      "get": {
        "tags": [
          "shipments"
        ],
        "summary": "Get Shipment With Details",
        "operationId": "get_shipment_with_details_api_v1_shipments__shipment_id__details_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Shipment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentWithDetails"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shipments/{shipment_id}/track": {
      "post": {
        "tags": [
          "shipments"
        ],
        "summary": "Track Shipment",
        "operationId": "track_shipment_api_v1_shipments__shipment_id__track_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Shipment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentTracking"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/receipts/": {
      "post": {
        "tags": [
          "receipts"
        ],
        "summary": "Create Receipt",
        "operationId": "create_receipt_api_v1_receipts__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceiptCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "receipts"
        ],
        "summary": "Read Receipts",
        "operationId": "read_receipts_api_v1_receipts__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "po_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Po Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  },
                  "title": "Response Read Receipts Api V1 Receipts  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/receipts/expected_today": {
      "get": {
        "tags": [
          "receipts"
        ],
        "summary": "Get Expected Receipts Today",
        "operationId": "get_expected_receipts_today_api_v1_receipts_expected_today_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  },
                  "type": "array",
                  "title": "Response Get Expected Receipts Today Api V1 Receipts Expected Today Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/receipts/{receipt_id}": {
      "get": {
        "tags": [
          "receipts"
        ],
        "summary": "Read Receipt",
        "operationId": "read_receipt_api_v1_receipts__receipt_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "receipt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the receipt to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "receipts"
        ],
        "summary": "Update Receipt",
        "operationId": "update_receipt_api_v1_receipts__receipt_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "receipt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the receipt to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ReceiptUpdate"
                  }
                ],
                "title": "Receipt update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "receipts"
        ],
        "summary": "Delete Receipt",
        "operationId": "delete_receipt_api_v1_receipts__receipt_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "receipt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the receipt to delete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/receipts/{receipt_id}/quality_check": {
      "post": {
        "tags": [
          "receipts"
        ],
        "summary": "Perform Receipt Quality Check",
        "operationId": "perform_receipt_quality_check_api_v1_receipts__receipt_id__quality_check_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "receipt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Receipt Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualityCheckCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/receipts/{receipt_id}/discrepancy": {
      "post": {
        "tags": [
          "receipts"
        ],
        "summary": "Report Receipt Discrepancy",
        "operationId": "report_receipt_discrepancy_api_v1_receipts__receipt_id__discrepancy_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "receipt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Receipt Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceiptDiscrepancy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pick_lists/": {
      "post": {
        "tags": [
          "pick_lists"
        ],
        "summary": "Create Pick List",
        "operationId": "create_pick_list_api_v1_pick_lists__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PickListCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "pick_lists"
        ],
        "summary": "Read Pick Lists",
        "operationId": "read_pick_lists_api_v1_pick_lists__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "order_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickList"
                  },
                  "title": "Response Read Pick Lists Api V1 Pick Lists  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pick_lists/optimize_route": {
      "get": {
        "tags": [
          "pick_lists"
        ],
        "summary": "Optimize Picking Route",
        "operationId": "optimize_picking_route_api_v1_pick_lists_optimize_route_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pick_list_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pick List Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizedPickingRoute"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pick_lists/performance": {
      "get": {
        "tags": [
          "pick_lists"
        ],
        "summary": "Get Picking Performance",
        "operationId": "get_picking_performance_api_v1_pick_lists_performance_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickingPerformance"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pick_lists/{pick_list_id}": {
      "get": {
        "tags": [
          "pick_lists"
        ],
        "summary": "Read Pick List",
        "operationId": "read_pick_list_api_v1_pick_lists__pick_list_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pick_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the pick list to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "pick_lists"
        ],
        "summary": "Update Pick List",
        "operationId": "update_pick_list_api_v1_pick_lists__pick_list_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pick_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the pick list to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PickListUpdate"
                  }
                ],
                "title": "Pick list update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "pick_lists"
        ],
        "summary": "Delete Pick List",
        "operationId": "delete_pick_list_api_v1_pick_lists__pick_list_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pick_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the pick list to delete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pick_lists/{pick_list_id}/start": {
      "post": {
        "tags": [
          "pick_lists"
        ],
        "summary": "Start Pick List",
        "operationId": "start_pick_list_api_v1_pick_lists__pick_list_id__start_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pick_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pick List Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pick_lists/{pick_list_id}/complete": {
      "post": {
        "tags": [
          "pick_lists"
        ],
        "summary": "Complete Pick List",
        "operationId": "complete_pick_list_api_v1_pick_lists__pick_list_id__complete_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pick_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pick List Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/permissions/": {
      "post": {
        "tags": [
          "permissions"
        ],
        "summary": "Create Permission",
        "operationId": "create_permission_api_v1_permissions__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "permissions"
        ],
        "summary": "Read Permissions",
        "operationId": "read_permissions_api_v1_permissions__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  },
                  "title": "Response Read Permissions Api V1 Permissions  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/permissions/{permission_id}": {
      "get": {
        "tags": [
          "permissions"
        ],
        "summary": "Read Permission",
        "operationId": "read_permission_api_v1_permissions__permission_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Permission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "permissions"
        ],
        "summary": "Update Permission",
        "operationId": "update_permission_api_v1_permissions__permission_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Permission Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "permissions"
        ],
        "summary": "Delete Permission",
        "operationId": "delete_permission_api_v1_permissions__permission_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Permission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product_categories/": {
      "post": {
        "tags": [
          "product_categories"
        ],
        "summary": "Create Category",
        "operationId": "create_category_api_v1_product_categories__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategoryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "product_categories"
        ],
        "summary": "Read Categories",
        "operationId": "read_categories_api_v1_product_categories__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategory"
                  },
                  "title": "Response Read Categories Api V1 Product Categories  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product_categories/{category_id}": {
      "get": {
        "tags": [
          "product_categories"
        ],
        "summary": "Read Category",
        "operationId": "read_category_api_v1_product_categories__category_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "product_categories"
        ],
        "summary": "Update Category",
        "operationId": "update_category_api_v1_product_categories__category_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "product_categories"
        ],
        "summary": "Delete Category",
        "operationId": "delete_category_api_v1_product_categories__category_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ABCAnalysisResult": {
        "properties": {
          "categories": {
            "items": {
              "$ref": "#/components/schemas/ABCCategory"
            },
            "type": "array",
            "title": "Categories"
          }
        },
        "type": "object",
        "required": [
          "categories"
        ],
        "title": "ABCAnalysisResult"
      },
      "ABCCategory": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "products": {
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "type": "array",
            "title": "Products"
          },
          "value_percentage": {
            "type": "number",
            "title": "Value Percentage"
          },
          "item_percentage": {
            "type": "number",
            "title": "Item Percentage"
          }
        },
        "type": "object",
        "required": [
          "category",
          "products",
          "value_percentage",
          "item_percentage"
        ],
        "title": "ABCCategory"
      },
      "AllPermissions": {
        "properties": {
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "permissions"
        ],
        "title": "AllPermissions"
      },
      "AllRoles": {
        "properties": {
          "roles": {
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "type": "array",
            "title": "Roles"
          }
        },
        "type": "object",
        "required": [
          "roles"
        ],
        "title": "AllRoles"
      },
      "AppointmentConflict": {
        "properties": {
          "conflicting_appointment": {
            "$ref": "#/components/schemas/DockAppointment"
          },
          "conflict_reason": {
            "type": "string",
            "title": "Conflict Reason"
          }
        },
        "type": "object",
        "required": [
          "conflicting_appointment",
          "conflict_reason"
        ],
        "title": "AppointmentConflict"
      },
      "Asset": {
        "properties": {
          "asset_type": {
            "type": "string",
            "title": "Asset Type"
          },
          "asset_name": {
            "type": "string",
            "title": "Asset Name"
          },
          "serial_number": {
            "type": "string",
            "title": "Serial Number"
          },
          "purchase_date": {
            "type": "integer",
            "title": "Purchase Date"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "asset_type",
          "asset_name",
          "serial_number",
          "purchase_date",
          "status",
          "id"
        ],
        "title": "Asset"
      },
      "AssetCreate": {
        "properties": {
          "asset_type": {
            "type": "string",
            "title": "Asset Type"
          },
          "asset_name": {
            "type": "string",
            "title": "Asset Name"
          },
          "serial_number": {
            "type": "string",
            "title": "Serial Number"
          },
          "purchase_date": {
            "type": "integer",
            "title": "Purchase Date"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          }
        },
        "type": "object",
        "required": [
          "asset_type",
          "asset_name",
          "serial_number",
          "purchase_date",
          "status"
        ],
        "title": "AssetCreate"
      },
      "AssetMaintenance": {
        "properties": {
          "asset_id": {
            "type": "integer",
            "title": "Asset Id"
          },
          "maintenance_type": {
            "type": "string",
            "title": "Maintenance Type"
          },
          "scheduled_date": {
            "type": "integer",
            "title": "Scheduled Date"
          },
          "completed_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed Date"
          },
          "performed_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Performed By"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "maintenance_id": {
            "type": "integer",
            "title": "Maintenance Id"
          }
        },
        "type": "object",
        "required": [
          "asset_id",
          "maintenance_type",
          "scheduled_date",
          "maintenance_id"
        ],
        "title": "AssetMaintenance"
      },
      "AssetMaintenanceCreate": {
        "properties": {
          "asset_id": {
            "type": "integer",
            "title": "Asset Id"
          },
          "maintenance_type": {
            "type": "string",
            "title": "Maintenance Type"
          },
          "scheduled_date": {
            "type": "integer",
            "title": "Scheduled Date"
          },
          "completed_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed Date"
          },
          "performed_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Performed By"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "asset_id",
          "maintenance_type",
          "scheduled_date"
        ],
        "title": "AssetMaintenanceCreate"
      },
      "AssetMaintenanceUpdate": {
        "properties": {
          "maintenance_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maintenance Type"
          },
          "scheduled_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled Date"
          },
          "completed_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed Date"
          },
          "performed_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Performed By"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "AssetMaintenanceUpdate"
      },
      "AssetTransfer": {
        "properties": {
          "new_location_id": {
            "type": "integer",
            "title": "New Location Id"
          }
        },
        "type": "object",
        "required": [
          "new_location_id"
        ],
        "title": "AssetTransfer"
      },
      "AssetUpdate": {
        "properties": {
          "asset_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Type"
          },
          "asset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Name"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "purchase_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purchase Date"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          }
        },
        "type": "object",
        "title": "AssetUpdate"
      },
      "AssetWithMaintenance": {
        "properties": {
          "asset_type": {
            "type": "string",
            "title": "Asset Type"
          },
          "asset_name": {
            "type": "string",
            "title": "Asset Name"
          },
          "serial_number": {
            "type": "string",
            "title": "Serial Number"
          },
          "purchase_date": {
            "type": "integer",
            "title": "Purchase Date"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "maintenance_records": {
            "items": {
              "$ref": "#/components/schemas/AssetMaintenance"
            },
            "type": "array",
            "title": "Maintenance Records",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "asset_type",
          "asset_name",
          "serial_number",
          "purchase_date",
          "status",
          "id"
        ],
        "title": "AssetWithMaintenance"
      },
      "AssetWithMaintenanceList": {
        "properties": {
          "assets": {
            "items": {
              "$ref": "#/components/schemas/AssetWithMaintenance"
            },
            "type": "array",
            "title": "Assets"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "assets",
          "total"
        ],
        "title": "AssetWithMaintenanceList"
      },
      "AuditLog": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "table_name": {
            "type": "string",
            "title": "Table Name"
          },
          "record_id": {
            "type": "integer",
            "title": "Record Id"
          },
          "old_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Value"
          },
          "new_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Value"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "timestamp": {
            "type": "integer",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "action_type",
          "table_name",
          "record_id",
          "id",
          "timestamp"
        ],
        "title": "AuditLog"
      },
      "AuditLogCreate": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "table_name": {
            "type": "string",
            "title": "Table Name"
          },
          "record_id": {
            "type": "integer",
            "title": "Record Id"
          },
          "old_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Value"
          },
          "new_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Value"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "action_type",
          "table_name",
          "record_id"
        ],
        "title": "AuditLogCreate"
      },
      "AuditLogExport": {
        "properties": {
          "logs": {
            "items": {
              "$ref": "#/components/schemas/AuditLog"
            },
            "type": "array",
            "title": "Logs"
          },
          "export_timestamp": {
            "type": "integer",
            "title": "Export Timestamp"
          }
        },
        "type": "object",
        "required": [
          "logs",
          "export_timestamp"
        ],
        "title": "AuditLogExport"
      },
      "AuditLogWithUser": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "table_name": {
            "type": "string",
            "title": "Table Name"
          },
          "record_id": {
            "type": "integer",
            "title": "Record Id"
          },
          "old_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Value"
          },
          "new_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Value"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "timestamp": {
            "type": "integer",
            "title": "Timestamp"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "action_type",
          "table_name",
          "record_id",
          "id",
          "timestamp",
          "user"
        ],
        "title": "AuditLogWithUser"
      },
      "AuditSummary": {
        "properties": {
          "total_logs": {
            "type": "integer",
            "title": "Total Logs"
          },
          "logs_by_action": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Logs By Action"
          },
          "logs_by_table": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Logs By Table"
          },
          "most_active_users": {
            "items": {
              "$ref": "#/components/schemas/UserActivitySummary"
            },
            "type": "array",
            "title": "Most Active Users"
          }
        },
        "type": "object",
        "required": [
          "total_logs",
          "logs_by_action",
          "logs_by_table",
          "most_active_users"
        ],
        "title": "AuditSummary"
      },
      "BarcodeData": {
        "properties": {
          "barcode": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Barcode"
          }
        },
        "type": "object",
        "required": [
          "barcode"
        ],
        "title": "BarcodeData"
      },
      "Body_add_product_substitute_api_v1_products__product_id__substitutes_post": {
        "properties": {
          "substitute_id": {
            "type": "integer",
            "title": "Substitute Id"
          }
        },
        "type": "object",
        "required": [
          "substitute_id"
        ],
        "title": "Body_add_product_substitute_api_v1_products__product_id__substitutes_post"
      },
      "Body_cancel_order_item_api_v1_orders__order_id__cancel_item_post": {
        "properties": {
          "item_id": {
            "type": "integer",
            "title": "Item Id"
          }
        },
        "type": "object",
        "required": [
          "item_id"
        ],
        "title": "Body_cancel_order_item_api_v1_orders__order_id__cancel_item_post"
      },
      "Body_change_user_password_api_v1_users_change_password_post": {
        "properties": {
          "current_password": {
            "type": "string",
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "Body_change_user_password_api_v1_users_change_password_post"
      },
      "Body_login_api_v1_users_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_api_v1_users_login_post"
      },
      "Body_reset_password_api_v1_users_reset_password_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_reset_password_api_v1_users_reset_password_post"
      },
      "BulkImportData": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InventoryCreate"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "BulkImportData"
      },
      "BulkImportResult": {
        "properties": {
          "success_count": {
            "type": "integer",
            "title": "Success Count"
          },
          "failure_count": {
            "type": "integer",
            "title": "Failure Count"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "success_count",
          "failure_count",
          "errors"
        ],
        "title": "BulkImportResult"
      },
      "Carrier": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "Carrier"
      },
      "CarrierCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CarrierCreate"
      },
      "CarrierPerformance": {
        "properties": {
          "carrier_id": {
            "type": "integer",
            "title": "Carrier Id"
          },
          "carrier_name": {
            "type": "string",
            "title": "Carrier Name"
          },
          "total_appointments": {
            "type": "integer",
            "title": "Total Appointments"
          },
          "on_time_appointments": {
            "type": "integer",
            "title": "On Time Appointments"
          },
          "late_appointments": {
            "type": "integer",
            "title": "Late Appointments"
          },
          "missed_appointments": {
            "type": "integer",
            "title": "Missed Appointments"
          },
          "average_dwell_time": {
            "type": "number",
            "title": "Average Dwell Time"
          }
        },
        "type": "object",
        "required": [
          "carrier_id",
          "carrier_name",
          "total_appointments",
          "on_time_appointments",
          "late_appointments",
          "missed_appointments",
          "average_dwell_time"
        ],
        "title": "CarrierPerformance"
      },
      "CarrierRate": {
        "properties": {
          "carrier_id": {
            "type": "integer",
            "title": "Carrier Id"
          },
          "carrier_name": {
            "type": "string",
            "title": "Carrier Name"
          },
          "rate": {
            "type": "number",
            "title": "Rate"
          },
          "estimated_delivery_time": {
            "type": "string",
            "title": "Estimated Delivery Time"
          }
        },
        "type": "object",
        "required": [
          "carrier_id",
          "carrier_name",
          "rate",
          "estimated_delivery_time"
        ],
        "title": "CarrierRate"
      },
      "CarrierUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          }
        },
        "type": "object",
        "title": "CarrierUpdate"
      },
      "Customer": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "Customer"
      },
      "CustomerCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CustomerCreate"
      },
      "CustomerUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          }
        },
        "type": "object",
        "title": "CustomerUpdate"
      },
      "DockAppointment": {
        "properties": {
          "yard_location_id": {
            "type": "integer",
            "title": "Yard Location Id"
          },
          "appointment_time": {
            "type": "integer",
            "title": "Appointment Time"
          },
          "carrier_id": {
            "type": "integer",
            "title": "Carrier Id"
          },
          "type": {
            "$ref": "#/components/schemas/YardLocationType"
          },
          "status": {
            "$ref": "#/components/schemas/YardLocationStatus"
          },
          "actual_arrival_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Arrival Time"
          },
          "actual_departure_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Departure Time"
          },
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id"
          }
        },
        "type": "object",
        "required": [
          "yard_location_id",
          "appointment_time",
          "carrier_id",
          "type",
          "status",
          "appointment_id"
        ],
        "title": "DockAppointment"
      },
      "DockAppointmentCreate": {
        "properties": {
          "yard_location_id": {
            "type": "integer",
            "title": "Yard Location Id"
          },
          "appointment_time": {
            "type": "integer",
            "title": "Appointment Time"
          },
          "carrier_id": {
            "type": "integer",
            "title": "Carrier Id"
          },
          "type": {
            "$ref": "#/components/schemas/YardLocationType"
          },
          "status": {
            "$ref": "#/components/schemas/YardLocationStatus"
          },
          "actual_arrival_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Arrival Time"
          },
          "actual_departure_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Departure Time"
          }
        },
        "type": "object",
        "required": [
          "yard_location_id",
          "appointment_time",
          "carrier_id",
          "type",
          "status"
        ],
        "title": "DockAppointmentCreate"
      },
      "DockAppointmentUpdate": {
        "properties": {
          "yard_location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yard Location Id"
          },
          "appointment_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Time"
          },
          "carrier_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Carrier Id"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/YardLocationType"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/YardLocationStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "actual_arrival_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Arrival Time"
          },
          "actual_departure_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Departure Time"
          }
        },
        "type": "object",
        "title": "DockAppointmentUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Inventory": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "expiration_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "last_updated": {
            "type": "integer",
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "location_id",
          "quantity",
          "id",
          "last_updated"
        ],
        "title": "Inventory"
      },
      "InventoryAdjustment": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "quantity_change": {
            "type": "integer",
            "title": "Quantity Change"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "timestamp": {
            "type": "integer",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "location_id",
          "quantity_change",
          "reason",
          "timestamp"
        ],
        "title": "InventoryAdjustment"
      },
      "InventoryCreate": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "expiration_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "location_id",
          "quantity"
        ],
        "title": "InventoryCreate"
      },
      "InventoryItem": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "product_name": {
            "type": "string",
            "title": "Product Name"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "value": {
            "type": "number",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "product_name",
          "quantity",
          "value"
        ],
        "title": "InventoryItem"
      },
      "InventoryList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InventoryWithDetails"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "InventoryList"
      },
      "InventoryLocationSuggestion": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "current_location_id": {
            "type": "integer",
            "title": "Current Location Id"
          },
          "suggested_location_id": {
            "type": "integer",
            "title": "Suggested Location Id"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "current_location_id",
          "suggested_location_id",
          "reason"
        ],
        "title": "InventoryLocationSuggestion"
      },
      "InventoryMovement": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "from_location_id": {
            "type": "integer",
            "title": "From Location Id"
          },
          "to_location_id": {
            "type": "integer",
            "title": "To Location Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "timestamp": {
            "type": "integer",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "from_location_id",
          "to_location_id",
          "quantity",
          "reason",
          "timestamp"
        ],
        "title": "InventoryMovement"
      },
      "InventoryReport": {
        "properties": {
          "total_products": {
            "type": "integer",
            "title": "Total Products"
          },
          "total_quantity": {
            "type": "integer",
            "title": "Total Quantity"
          },
          "low_stock_items": {
            "items": {
              "$ref": "#/components/schemas/ProductWithInventory"
            },
            "type": "array",
            "title": "Low Stock Items"
          },
          "out_of_stock_items": {
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "type": "array",
            "title": "Out Of Stock Items"
          }
        },
        "type": "object",
        "required": [
          "total_products",
          "total_quantity",
          "low_stock_items",
          "out_of_stock_items"
        ],
        "title": "InventoryReport"
      },
      "InventorySummary": {
        "properties": {
          "category_quantities": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Category Quantities"
          },
          "total_items": {
            "type": "integer",
            "title": "Total Items"
          },
          "total_categories": {
            "type": "integer",
            "title": "Total Categories"
          }
        },
        "type": "object",
        "required": [
          "category_quantities",
          "total_items",
          "total_categories"
        ],
        "title": "InventorySummary"
      },
      "InventorySummaryReport": {
        "properties": {
          "total_items": {
            "type": "integer",
            "title": "Total Items"
          },
          "total_value": {
            "type": "number",
            "title": "Total Value"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/InventoryItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "total_items",
          "total_value",
          "items"
        ],
        "title": "InventorySummaryReport"
      },
      "InventoryTransfer": {
        "properties": {
          "from_location_id": {
            "type": "integer",
            "title": "From Location Id"
          },
          "to_location_id": {
            "type": "integer",
            "title": "To Location Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "from_location_id",
          "to_location_id",
          "quantity"
        ],
        "title": "InventoryTransfer"
      },
      "InventoryUpdate": {
        "properties": {
          "product_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Id"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          },
          "quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quantity"
          },
          "expiration_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date"
          }
        },
        "type": "object",
        "title": "InventoryUpdate"
      },
      "InventoryWithDetails": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "expiration_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "last_updated": {
            "type": "integer",
            "title": "Last Updated"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "location_id",
          "quantity",
          "id",
          "last_updated",
          "product",
          "location"
        ],
        "title": "InventoryWithDetails"
      },
      "KPIDashboard": {
        "properties": {
          "date": {
            "type": "integer",
            "title": "Date"
          },
          "metrics": {
            "items": {
              "$ref": "#/components/schemas/KPIMetric"
            },
            "type": "array",
            "title": "Metrics"
          }
        },
        "type": "object",
        "required": [
          "date",
          "metrics"
        ],
        "title": "KPIDashboard"
      },
      "KPIMetric": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "trend": {
            "type": "string",
            "title": "Trend"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value",
          "trend"
        ],
        "title": "KPIMetric"
      },
      "Location": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "zone_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zone Id"
          },
          "aisle": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Aisle"
          },
          "rack": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Rack"
          },
          "shelf": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Shelf"
          },
          "bin": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Bin"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "Location"
      },
      "LocationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "zone_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zone Id"
          },
          "aisle": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Aisle"
          },
          "rack": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Rack"
          },
          "shelf": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Shelf"
          },
          "bin": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Bin"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "LocationCreate"
      },
      "LocationInventory": {
        "properties": {
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "location_id",
          "product_id",
          "quantity"
        ],
        "title": "LocationInventory"
      },
      "LocationInventoryUpdate": {
        "properties": {
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "quantity"
        ],
        "title": "LocationInventoryUpdate"
      },
      "LocationUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "zone_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zone Id"
          },
          "aisle": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Aisle"
          },
          "rack": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Rack"
          },
          "shelf": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Shelf"
          },
          "bin": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Bin"
          }
        },
        "type": "object",
        "title": "LocationUpdate"
      },
      "LocationWithInventory": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "zone_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zone Id"
          },
          "aisle": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Aisle"
          },
          "rack": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Rack"
          },
          "shelf": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Shelf"
          },
          "bin": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Bin"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "inventory_items": {
            "items": {
              "$ref": "#/components/schemas/Inventory"
            },
            "type": "array",
            "title": "Inventory Items",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "LocationWithInventory"
      },
      "Message": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "Message"
      },
      "OptimizedPickingRoute": {
        "properties": {
          "pick_list_id": {
            "type": "integer",
            "title": "Pick List Id"
          },
          "optimized_route": {
            "items": {
              "$ref": "#/components/schemas/PickListItem"
            },
            "type": "array",
            "title": "Optimized Route"
          }
        },
        "type": "object",
        "required": [
          "pick_list_id",
          "optimized_route"
        ],
        "title": "OptimizedPickingRoute"
      },
      "Order": {
        "properties": {
          "customer_id": {
            "type": "integer",
            "title": "Customer Id"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "shipping_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Name"
          },
          "shipping_address_line1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Address Line1"
          },
          "shipping_city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping City"
          },
          "shipping_state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping State"
          },
          "shipping_postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Postal Code"
          },
          "shipping_country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Country"
          },
          "shipping_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Phone"
          },
          "ship_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ship Date"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "order_date": {
            "type": "integer",
            "title": "Order Date"
          },
          "order_items": {
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "type": "array",
            "title": "Order Items",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "status",
          "total_amount",
          "id",
          "order_date"
        ],
        "title": "Order"
      },
      "OrderCreate": {
        "properties": {
          "customer_id": {
            "type": "integer",
            "title": "Customer Id"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "shipping_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Name"
          },
          "shipping_address_line1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Address Line1"
          },
          "shipping_city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping City"
          },
          "shipping_state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping State"
          },
          "shipping_postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Postal Code"
          },
          "shipping_country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Country"
          },
          "shipping_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Phone"
          },
          "ship_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ship Date"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/OrderItemCreate"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "status",
          "total_amount",
          "items"
        ],
        "title": "OrderCreate"
      },
      "OrderItem": {
        "properties": {
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Product"
              }
            ]
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          }
        },
        "type": "object",
        "required": [
          "quantity",
          "unit_price",
          "id",
          "order_id"
        ],
        "title": "OrderItem"
      },
      "OrderItemCreate": {
        "properties": {
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Product"
              }
            ]
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          }
        },
        "type": "object",
        "required": [
          "quantity",
          "unit_price"
        ],
        "title": "OrderItemCreate"
      },
      "OrderItemUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "product_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Id"
          },
          "quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quantity"
          },
          "unit_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Price"
          }
        },
        "type": "object",
        "title": "OrderItemUpdate"
      },
      "OrderProcessingTimes": {
        "properties": {
          "average_processing_time": {
            "type": "number",
            "title": "Average Processing Time"
          },
          "min_processing_time": {
            "type": "number",
            "title": "Min Processing Time"
          },
          "max_processing_time": {
            "type": "number",
            "title": "Max Processing Time"
          },
          "average_shipping_time": {
            "type": "number",
            "title": "Average Shipping Time"
          },
          "min_shipping_time": {
            "type": "number",
            "title": "Min Shipping Time"
          },
          "max_shipping_time": {
            "type": "number",
            "title": "Max Shipping Time"
          }
        },
        "type": "object",
        "required": [
          "average_processing_time",
          "min_processing_time",
          "max_processing_time",
          "average_shipping_time",
          "min_shipping_time",
          "max_shipping_time"
        ],
        "title": "OrderProcessingTimes"
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "Pending",
          "Processing",
          "Shipped",
          "Delivered",
          "Cancelled"
        ],
        "title": "OrderStatus"
      },
      "OrderSummary": {
        "properties": {
          "total_orders": {
            "type": "integer",
            "title": "Total Orders"
          },
          "total_revenue": {
            "type": "number",
            "title": "Total Revenue"
          },
          "average_order_value": {
            "type": "number",
            "title": "Average Order Value"
          }
        },
        "type": "object",
        "required": [
          "total_orders",
          "total_revenue",
          "average_order_value"
        ],
        "title": "OrderSummary"
      },
      "OrderSummaryReport": {
        "properties": {
          "start_date": {
            "type": "integer",
            "title": "Start Date"
          },
          "end_date": {
            "type": "integer",
            "title": "End Date"
          },
          "summary": {
            "$ref": "#/components/schemas/OrderSummary"
          }
        },
        "type": "object",
        "required": [
          "start_date",
          "end_date",
          "summary"
        ],
        "title": "OrderSummaryReport"
      },
      "OrderUpdate": {
        "properties": {
          "customer_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Id"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "total_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Amount"
          },
          "shipping_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Name"
          },
          "shipping_address_line1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Address Line1"
          },
          "shipping_city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping City"
          },
          "shipping_state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping State"
          },
          "shipping_postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Postal Code"
          },
          "shipping_country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Country"
          },
          "shipping_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Phone"
          },
          "ship_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ship Date"
          },
          "items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrderItemUpdate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Items"
          }
        },
        "type": "object",
        "title": "OrderUpdate"
      },
      "OrderWithDetails": {
        "properties": {
          "customer_id": {
            "type": "integer",
            "title": "Customer Id"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "shipping_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Name"
          },
          "shipping_address_line1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Address Line1"
          },
          "shipping_city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping City"
          },
          "shipping_state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping State"
          },
          "shipping_postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Postal Code"
          },
          "shipping_country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Country"
          },
          "shipping_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Phone"
          },
          "ship_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ship Date"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "order_date": {
            "type": "integer",
            "title": "Order Date"
          },
          "order_items": {
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "type": "array",
            "title": "Order Items"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "status",
          "total_amount",
          "id",
          "order_date",
          "order_items",
          "customer"
        ],
        "title": "OrderWithDetails"
      },
      "POItem": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "po_id": {
            "type": "integer",
            "title": "Po Id"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "quantity",
          "unit_price",
          "id",
          "po_id"
        ],
        "title": "POItem"
      },
      "POItemCreate": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "quantity",
          "unit_price"
        ],
        "title": "POItemCreate"
      },
      "POItemReceive": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "received_quantity": {
            "type": "integer",
            "title": "Received Quantity"
          }
        },
        "type": "object",
        "required": [
          "id",
          "received_quantity"
        ],
        "title": "POItemReceive"
      },
      "POItemUpdate": {
        "properties": {
          "product_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Id"
          },
          "quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quantity"
          },
          "unit_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Price"
          }
        },
        "type": "object",
        "title": "POItemUpdate"
      },
      "Permission": {
        "properties": {
          "permission_name": {
            "type": "string",
            "title": "Permission Name"
          },
          "can_read": {
            "type": "boolean",
            "title": "Can Read",
            "default": false
          },
          "can_write": {
            "type": "boolean",
            "title": "Can Write",
            "default": false
          },
          "can_delete": {
            "type": "boolean",
            "title": "Can Delete",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "permission_name",
          "id"
        ],
        "title": "Permission"
      },
      "PermissionCreate": {
        "properties": {
          "permission_name": {
            "type": "string",
            "title": "Permission Name"
          },
          "can_read": {
            "type": "boolean",
            "title": "Can Read",
            "default": false
          },
          "can_write": {
            "type": "boolean",
            "title": "Can Write",
            "default": false
          },
          "can_delete": {
            "type": "boolean",
            "title": "Can Delete",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "permission_name"
        ],
        "title": "PermissionCreate"
      },
      "PermissionUpdate": {
        "properties": {
          "permission_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission Name"
          },
          "can_read": {
            "type": "boolean",
            "title": "Can Read",
            "default": false
          },
          "can_write": {
            "type": "boolean",
            "title": "Can Write",
            "default": false
          },
          "can_delete": {
            "type": "boolean",
            "title": "Can Delete",
            "default": false
          }
        },
        "type": "object",
        "title": "PermissionUpdate"
      },
      "PickList": {
        "properties": {
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "pick_list_id": {
            "type": "integer",
            "title": "Pick List Id"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PickListItem"
            },
            "type": "array",
            "title": "Items",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "order_id",
          "status",
          "pick_list_id",
          "created_at"
        ],
        "title": "PickList"
      },
      "PickListCreate": {
        "properties": {
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PickListItemCreate"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "order_id",
          "status",
          "items"
        ],
        "title": "PickListCreate"
      },
      "PickListItem": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "picked_quantity": {
            "type": "integer",
            "title": "Picked Quantity",
            "default": 0
          },
          "pick_list_item_id": {
            "type": "integer",
            "title": "Pick List Item Id"
          },
          "pick_list_id": {
            "type": "integer",
            "title": "Pick List Id"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "location_id",
          "quantity",
          "pick_list_item_id",
          "pick_list_id"
        ],
        "title": "PickListItem"
      },
      "PickListItemCreate": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "picked_quantity": {
            "type": "integer",
            "title": "Picked Quantity",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "location_id",
          "quantity"
        ],
        "title": "PickListItemCreate"
      },
      "PickListItemUpdate": {
        "properties": {
          "product_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Id"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          },
          "quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quantity"
          },
          "picked_quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picked Quantity"
          }
        },
        "type": "object",
        "title": "PickListItemUpdate"
      },
      "PickListUpdate": {
        "properties": {
          "order_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PickListItemUpdate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Items"
          }
        },
        "type": "object",
        "title": "PickListUpdate"
      },
      "PickingPerformance": {
        "properties": {
          "average_picking_time": {
            "type": "number",
            "title": "Average Picking Time"
          },
          "items_picked_per_hour": {
            "type": "number",
            "title": "Items Picked Per Hour"
          },
          "accuracy_rate": {
            "type": "number",
            "title": "Accuracy Rate"
          }
        },
        "type": "object",
        "required": [
          "average_picking_time",
          "items_picked_per_hour",
          "accuracy_rate"
        ],
        "title": "PickingPerformance"
      },
      "Product": {
        "properties": {
          "sku": {
            "type": "string",
            "title": "Sku"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "dimensions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimensions"
          },
          "barcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barcode"
          },
          "price": {
            "type": "number",
            "title": "Price"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "sku",
          "name",
          "category_id",
          "price",
          "id"
        ],
        "title": "Product"
      },
      "ProductCategory": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "parent_category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Category Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "ProductCategory"
      },
      "ProductCategoryCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "parent_category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Category Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ProductCategoryCreate"
      },
      "ProductCategoryUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "parent_category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Category Id"
          }
        },
        "type": "object",
        "title": "ProductCategoryUpdate"
      },
      "ProductCreate": {
        "properties": {
          "sku": {
            "type": "string",
            "title": "Sku"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "dimensions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimensions"
          },
          "barcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barcode"
          },
          "price": {
            "type": "number",
            "title": "Price"
          }
        },
        "type": "object",
        "required": [
          "sku",
          "name",
          "category_id",
          "price"
        ],
        "title": "ProductCreate"
      },
      "ProductDefectRate": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "product_name": {
            "type": "string",
            "title": "Product Name"
          },
          "total_checks": {
            "type": "integer",
            "title": "Total Checks"
          },
          "defect_count": {
            "type": "integer",
            "title": "Defect Count"
          },
          "defect_rate": {
            "type": "number",
            "title": "Defect Rate"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "product_name",
          "total_checks",
          "defect_count",
          "defect_rate"
        ],
        "title": "ProductDefectRate"
      },
      "ProductUpdate": {
        "properties": {
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "dimensions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimensions"
          },
          "barcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barcode"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          }
        },
        "type": "object",
        "title": "ProductUpdate"
      },
      "ProductWithCategoryAndInventory": {
        "properties": {
          "sku": {
            "type": "string",
            "title": "Sku"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "dimensions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimensions"
          },
          "barcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barcode"
          },
          "price": {
            "type": "number",
            "title": "Price"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "inventory_items": {
            "items": {
              "$ref": "#/components/schemas/Inventory"
            },
            "type": "array",
            "title": "Inventory Items",
            "default": []
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductCategory"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "sku",
          "name",
          "category_id",
          "price",
          "id"
        ],
        "title": "ProductWithCategoryAndInventory"
      },
      "ProductWithInventory": {
        "properties": {
          "sku": {
            "type": "string",
            "title": "Sku"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "dimensions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimensions"
          },
          "barcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barcode"
          },
          "price": {
            "type": "number",
            "title": "Price"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "inventory_items": {
            "items": {
              "$ref": "#/components/schemas/Inventory"
            },
            "type": "array",
            "title": "Inventory Items",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "sku",
          "name",
          "category_id",
          "price",
          "id"
        ],
        "title": "ProductWithInventory"
      },
      "PurchaseOrder": {
        "properties": {
          "supplier_id": {
            "type": "integer",
            "title": "Supplier Id"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "expected_delivery_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Delivery Date"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "order_date": {
            "type": "integer",
            "title": "Order Date"
          },
          "po_items": {
            "items": {
              "$ref": "#/components/schemas/POItem"
            },
            "type": "array",
            "title": "Po Items",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "supplier_id",
          "status",
          "id",
          "order_date"
        ],
        "title": "PurchaseOrder"
      },
      "PurchaseOrderCreate": {
        "properties": {
          "supplier_id": {
            "type": "integer",
            "title": "Supplier Id"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "expected_delivery_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Delivery Date"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/POItemCreate"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "supplier_id",
          "status",
          "items"
        ],
        "title": "PurchaseOrderCreate"
      },
      "PurchaseOrderUpdate": {
        "properties": {
          "supplier_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier Id"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "expected_delivery_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Delivery Date"
          },
          "items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/POItemUpdate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Items"
          }
        },
        "type": "object",
        "title": "PurchaseOrderUpdate"
      },
      "PurchaseOrderWithDetails": {
        "properties": {
          "supplier_id": {
            "type": "integer",
            "title": "Supplier Id"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "expected_delivery_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Delivery Date"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "order_date": {
            "type": "integer",
            "title": "Order Date"
          },
          "po_items": {
            "items": {
              "$ref": "#/components/schemas/POItem"
            },
            "type": "array",
            "title": "Po Items"
          },
          "supplier": {
            "$ref": "#/components/schemas/Supplier"
          }
        },
        "type": "object",
        "required": [
          "supplier_id",
          "status",
          "id",
          "order_date",
          "po_items",
          "supplier"
        ],
        "title": "PurchaseOrderWithDetails"
      },
      "QualityAlert": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "alert_type": {
            "type": "string",
            "title": "Alert Type"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "resolved_at": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resolved At"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "alert_type",
          "description",
          "id",
          "created_at"
        ],
        "title": "QualityAlert"
      },
      "QualityAlertCreate": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "alert_type": {
            "type": "string",
            "title": "Alert Type"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "alert_type",
          "description"
        ],
        "title": "QualityAlertCreate"
      },
      "QualityAlertUpdate": {
        "properties": {
          "product_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Id"
          },
          "alert_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alert Type"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "resolved_at": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resolved At"
          }
        },
        "type": "object",
        "title": "QualityAlertUpdate"
      },
      "QualityCheck": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "performed_by": {
            "type": "integer",
            "title": "Performed By"
          },
          "result": {
            "type": "string",
            "title": "Result"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "check_date": {
            "type": "integer",
            "title": "Check Date"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "performed_by",
          "result",
          "id",
          "check_date"
        ],
        "title": "QualityCheck"
      },
      "QualityCheckComment": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "check_id": {
            "type": "integer",
            "title": "Check Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "check_id",
          "user_id",
          "comment",
          "created_at"
        ],
        "title": "QualityCheckComment"
      },
      "QualityCheckCommentCreate": {
        "properties": {
          "check_id": {
            "type": "integer",
            "title": "Check Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "check_id",
          "user_id",
          "comment"
        ],
        "title": "QualityCheckCommentCreate"
      },
      "QualityCheckCreate": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "performed_by": {
            "type": "integer",
            "title": "Performed By"
          },
          "result": {
            "type": "string",
            "title": "Result"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "performed_by",
          "result"
        ],
        "title": "QualityCheckCreate"
      },
      "QualityCheckUpdate": {
        "properties": {
          "product_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Id"
          },
          "performed_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Performed By"
          },
          "result": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "QualityCheckUpdate"
      },
      "QualityCheckWithProduct": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "performed_by": {
            "type": "integer",
            "title": "Performed By"
          },
          "result": {
            "type": "string",
            "title": "Result"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "check_date": {
            "type": "integer",
            "title": "Check Date"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "performed_by",
          "result",
          "id",
          "check_date",
          "product"
        ],
        "title": "QualityCheckWithProduct"
      },
      "QualityMetrics": {
        "properties": {
          "total_checks": {
            "type": "integer",
            "title": "Total Checks"
          },
          "pass_rate": {
            "type": "number",
            "title": "Pass Rate"
          },
          "fail_rate": {
            "type": "number",
            "title": "Fail Rate"
          }
        },
        "type": "object",
        "required": [
          "total_checks",
          "pass_rate",
          "fail_rate"
        ],
        "title": "QualityMetrics"
      },
      "QualityStandard": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "criteria": {
            "type": "string",
            "title": "Criteria"
          },
          "acceptable_range": {
            "type": "string",
            "title": "Acceptable Range"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "criteria",
          "acceptable_range",
          "id"
        ],
        "title": "QualityStandard"
      },
      "QualityStandardCreate": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "criteria": {
            "type": "string",
            "title": "Criteria"
          },
          "acceptable_range": {
            "type": "string",
            "title": "Acceptable Range"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "criteria",
          "acceptable_range"
        ],
        "title": "QualityStandardCreate"
      },
      "QualityStandardUpdate": {
        "properties": {
          "product_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Id"
          },
          "criteria": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Criteria"
          },
          "acceptable_range": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Acceptable Range"
          }
        },
        "type": "object",
        "title": "QualityStandardUpdate"
      },
      "Receipt": {
        "properties": {
          "po_id": {
            "type": "integer",
            "title": "Po Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "receipt_id": {
            "type": "integer",
            "title": "Receipt Id"
          },
          "received_date": {
            "type": "integer",
            "title": "Received Date"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ReceiptItem"
            },
            "type": "array",
            "title": "Items",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "po_id",
          "status",
          "receipt_id",
          "received_date"
        ],
        "title": "Receipt"
      },
      "ReceiptCreate": {
        "properties": {
          "po_id": {
            "type": "integer",
            "title": "Po Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ReceiptItemCreate"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "po_id",
          "status",
          "items"
        ],
        "title": "ReceiptCreate"
      },
      "ReceiptDiscrepancy": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "expected_quantity": {
            "type": "integer",
            "title": "Expected Quantity"
          },
          "received_quantity": {
            "type": "integer",
            "title": "Received Quantity"
          },
          "discrepancy": {
            "type": "integer",
            "title": "Discrepancy"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "expected_quantity",
          "received_quantity",
          "discrepancy"
        ],
        "title": "ReceiptDiscrepancy"
      },
      "ReceiptItem": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "quantity_received": {
            "type": "integer",
            "title": "Quantity Received"
          },
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "receipt_item_id": {
            "type": "integer",
            "title": "Receipt Item Id"
          },
          "receipt_id": {
            "type": "integer",
            "title": "Receipt Id"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "quantity_received",
          "location_id",
          "receipt_item_id",
          "receipt_id"
        ],
        "title": "ReceiptItem"
      },
      "ReceiptItemCreate": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "quantity_received": {
            "type": "integer",
            "title": "Quantity Received"
          },
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "quantity_received",
          "location_id"
        ],
        "title": "ReceiptItemCreate"
      },
      "ReceiptItemUpdate": {
        "properties": {
          "product_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Id"
          },
          "quantity_received": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quantity Received"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          }
        },
        "type": "object",
        "title": "ReceiptItemUpdate"
      },
      "ReceiptUpdate": {
        "properties": {
          "po_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Po Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReceiptItemUpdate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Items"
          }
        },
        "type": "object",
        "title": "ReceiptUpdate"
      },
      "Role": {
        "properties": {
          "role_name": {
            "$ref": "#/components/schemas/RoleName"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "type": "array",
            "title": "Permissions",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "role_name",
          "id"
        ],
        "title": "Role"
      },
      "RoleName": {
        "type": "string",
        "enum": [
          "admin",
          "manager",
          "user"
        ],
        "title": "RoleName"
      },
      "RoleUpdate": {
        "properties": {
          "role_name": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoleName"
              },
              {
                "type": "null"
              }
            ]
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions"
          }
        },
        "type": "object",
        "title": "RoleUpdate"
      },
      "Shipment": {
        "properties": {
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          },
          "carrier_id": {
            "type": "integer",
            "title": "Carrier Id"
          },
          "tracking_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tracking Number"
          },
          "status": {
            "$ref": "#/components/schemas/ShipmentStatus"
          },
          "label_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label Id"
          },
          "label_download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label Download Url"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "ship_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ship Date"
          }
        },
        "type": "object",
        "required": [
          "order_id",
          "carrier_id",
          "status",
          "id"
        ],
        "title": "Shipment"
      },
      "ShipmentCreate": {
        "properties": {
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          },
          "carrier_id": {
            "type": "integer",
            "title": "Carrier Id"
          },
          "tracking_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tracking Number"
          },
          "status": {
            "$ref": "#/components/schemas/ShipmentStatus"
          },
          "label_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label Id"
          },
          "label_download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label Download Url"
          },
          "ship_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ship Date"
          }
        },
        "type": "object",
        "required": [
          "order_id",
          "carrier_id",
          "status"
        ],
        "title": "ShipmentCreate"
      },
      "ShipmentStatus": {
        "type": "string",
        "enum": [
          "Pending",
          "In Transit",
          "Delivered"
        ],
        "title": "ShipmentStatus"
      },
      "ShipmentTracking": {
        "properties": {
          "shipment_id": {
            "type": "integer",
            "title": "Shipment Id"
          },
          "tracking_number": {
            "type": "string",
            "title": "Tracking Number"
          },
          "current_status": {
            "type": "string",
            "title": "Current Status"
          },
          "estimated_delivery_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Delivery Date"
          },
          "tracking_history": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Tracking History"
          }
        },
        "type": "object",
        "required": [
          "shipment_id",
          "tracking_number",
          "current_status",
          "estimated_delivery_date",
          "tracking_history"
        ],
        "title": "ShipmentTracking"
      },
      "ShipmentUpdate": {
        "properties": {
          "order_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order Id"
          },
          "carrier_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Carrier Id"
          },
          "tracking_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tracking Number"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ShipmentStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "ship_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ship Date"
          },
          "label_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label Id"
          },
          "label_download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label Download Url"
          }
        },
        "type": "object",
        "title": "ShipmentUpdate"
      },
      "ShipmentWithDetails": {
        "properties": {
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          },
          "carrier_id": {
            "type": "integer",
            "title": "Carrier Id"
          },
          "tracking_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tracking Number"
          },
          "status": {
            "$ref": "#/components/schemas/ShipmentStatus"
          },
          "label_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label Id"
          },
          "label_download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label Download Url"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "ship_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ship Date"
          },
          "order": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order"
              },
              {
                "type": "null"
              }
            ]
          },
          "carrier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Carrier"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "order_id",
          "carrier_id",
          "status",
          "id"
        ],
        "title": "ShipmentWithDetails"
      },
      "ShippingInfo": {
        "properties": {
          "carrier": {
            "type": "string",
            "title": "Carrier"
          },
          "carrier_id": {
            "type": "integer",
            "title": "Carrier Id"
          },
          "tracking_number": {
            "type": "string",
            "title": "Tracking Number"
          }
        },
        "type": "object",
        "required": [
          "carrier",
          "carrier_id",
          "tracking_number"
        ],
        "title": "ShippingInfo"
      },
      "ShippingLabel": {
        "properties": {
          "shipment_id": {
            "type": "integer",
            "title": "Shipment Id"
          },
          "tracking_number": {
            "type": "string",
            "title": "Tracking Number"
          },
          "label_id": {
            "type": "string",
            "title": "Label Id"
          },
          "label_download_url": {
            "type": "string",
            "title": "Label Download Url"
          }
        },
        "type": "object",
        "required": [
          "shipment_id",
          "tracking_number",
          "label_id",
          "label_download_url"
        ],
        "title": "ShippingLabel"
      },
      "StocktakeCreate": {
        "properties": {
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/StocktakeItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "location_id",
          "items"
        ],
        "title": "StocktakeCreate"
      },
      "StocktakeDiscrepancy": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "expected_quantity": {
            "type": "integer",
            "title": "Expected Quantity"
          },
          "counted_quantity": {
            "type": "integer",
            "title": "Counted Quantity"
          },
          "discrepancy": {
            "type": "integer",
            "title": "Discrepancy"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "expected_quantity",
          "counted_quantity",
          "discrepancy"
        ],
        "title": "StocktakeDiscrepancy"
      },
      "StocktakeItem": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "counted_quantity": {
            "type": "integer",
            "title": "Counted Quantity"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "counted_quantity"
        ],
        "title": "StocktakeItem"
      },
      "StocktakeResult": {
        "properties": {
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "total_items": {
            "type": "integer",
            "title": "Total Items"
          },
          "discrepancies": {
            "items": {
              "$ref": "#/components/schemas/StocktakeDiscrepancy"
            },
            "type": "array",
            "title": "Discrepancies"
          },
          "accuracy_percentage": {
            "type": "number",
            "title": "Accuracy Percentage"
          }
        },
        "type": "object",
        "required": [
          "location_id",
          "total_items",
          "discrepancies",
          "accuracy_percentage"
        ],
        "title": "StocktakeResult"
      },
      "StorageUtilization": {
        "properties": {
          "total_capacity": {
            "type": "number",
            "title": "Total Capacity"
          },
          "used_capacity": {
            "type": "number",
            "title": "Used Capacity"
          },
          "utilization_percentage": {
            "type": "number",
            "title": "Utilization Percentage"
          }
        },
        "type": "object",
        "required": [
          "total_capacity",
          "used_capacity",
          "utilization_percentage"
        ],
        "title": "StorageUtilization"
      },
      "Supplier": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "contact_person": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Person"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "Supplier"
      },
      "SupplierCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "contact_person": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Person"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "SupplierCreate"
      },
      "SupplierUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "contact_person": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Person"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          }
        },
        "type": "object",
        "title": "SupplierUpdate"
      },
      "Task": {
        "properties": {
          "task_type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "assigned_to": {
            "type": "integer",
            "title": "Assigned To"
          },
          "due_date": {
            "type": "integer",
            "title": "Due Date"
          },
          "priority": {
            "$ref": "#/components/schemas/TaskPriority"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "task_type",
          "description",
          "assigned_to",
          "due_date",
          "priority",
          "status",
          "id",
          "created_at"
        ],
        "title": "Task"
      },
      "TaskComment": {
        "properties": {
          "task_id": {
            "type": "integer",
            "title": "Task Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "user_id",
          "comment",
          "id",
          "created_at"
        ],
        "title": "TaskComment"
      },
      "TaskCommentCreate": {
        "properties": {
          "task_id": {
            "type": "integer",
            "title": "Task Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "user_id",
          "comment"
        ],
        "title": "TaskCommentCreate"
      },
      "TaskCreate": {
        "properties": {
          "task_type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "assigned_to": {
            "type": "integer",
            "title": "Assigned To"
          },
          "due_date": {
            "type": "integer",
            "title": "Due Date"
          },
          "priority": {
            "$ref": "#/components/schemas/TaskPriority"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          }
        },
        "type": "object",
        "required": [
          "task_type",
          "description",
          "assigned_to",
          "due_date",
          "priority",
          "status"
        ],
        "title": "TaskCreate"
      },
      "TaskPriority": {
        "type": "string",
        "enum": [
          "Low",
          "Medium",
          "High"
        ],
        "title": "TaskPriority"
      },
      "TaskStatistics": {
        "properties": {
          "total_tasks": {
            "type": "integer",
            "title": "Total Tasks"
          },
          "completed_tasks": {
            "type": "integer",
            "title": "Completed Tasks"
          },
          "overdue_tasks": {
            "type": "integer",
            "title": "Overdue Tasks"
          },
          "high_priority_tasks": {
            "type": "integer",
            "title": "High Priority Tasks"
          }
        },
        "type": "object",
        "required": [
          "total_tasks",
          "completed_tasks",
          "overdue_tasks",
          "high_priority_tasks"
        ],
        "title": "TaskStatistics"
      },
      "TaskStatus": {
        "type": "string",
        "enum": [
          "Pending",
          "In Progress",
          "Completed"
        ],
        "title": "TaskStatus"
      },
      "TaskType": {
        "type": "string",
        "enum": [
          "Feature",
          "Bugfix",
          "Improvement",
          "Research",
          "Other"
        ],
        "title": "TaskType"
      },
      "TaskUpdate": {
        "properties": {
          "task_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskType"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "assigned_to": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned To"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "priority": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskPriority"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "TaskUpdate"
      },
      "TaskWithAssignee": {
        "properties": {
          "task_type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "assigned_to": {
            "type": "integer",
            "title": "Assigned To"
          },
          "due_date": {
            "type": "integer",
            "title": "Due Date"
          },
          "priority": {
            "$ref": "#/components/schemas/TaskPriority"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "assigned_user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "task_type",
          "description",
          "assigned_to",
          "due_date",
          "priority",
          "status",
          "id",
          "created_at"
        ],
        "title": "TaskWithAssignee"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token"
      },
      "User": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "role_id": {
            "type": "integer",
            "title": "Role Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "password_hash": {
            "type": "string",
            "title": "Password Hash"
          },
          "password_reset_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password Reset Token"
          },
          "password_reset_expiration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password Reset Expiration"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "role_id",
          "id",
          "created_at",
          "password_hash"
        ],
        "title": "User"
      },
      "UserActivitySummary": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "total_actions": {
            "type": "integer",
            "title": "Total Actions"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "username",
          "total_actions"
        ],
        "title": "UserActivitySummary"
      },
      "UserCreate": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "role_id": {
            "type": "integer",
            "title": "Role Id"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "role_id",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserPermissionUpdate": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "permissions": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "permissions"
        ],
        "title": "UserPermissionUpdate"
      },
      "UserSanitizedWithRole": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "role_id": {
            "type": "integer",
            "title": "Role Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "role_id",
          "id",
          "created_at",
          "role"
        ],
        "title": "UserSanitizedWithRole"
      },
      "UserTaskSummary": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "assigned_tasks": {
            "type": "integer",
            "title": "Assigned Tasks"
          },
          "completed_tasks": {
            "type": "integer",
            "title": "Completed Tasks"
          },
          "overdue_tasks": {
            "type": "integer",
            "title": "Overdue Tasks"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "username",
          "assigned_tasks",
          "completed_tasks",
          "overdue_tasks"
        ],
        "title": "UserTaskSummary"
      },
      "UserUpdate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UserWithPermissions": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "role_id": {
            "type": "integer",
            "title": "Role Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "role_id",
          "id",
          "created_at",
          "role",
          "permissions"
        ],
        "title": "UserWithPermissions"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WarehouseLayout": {
        "properties": {
          "zones": {
            "items": {
              "$ref": "#/components/schemas/ZoneWithLocations"
            },
            "type": "array",
            "title": "Zones"
          }
        },
        "type": "object",
        "required": [
          "zones"
        ],
        "title": "WarehouseLayout"
      },
      "WarehousePerformanceMetric": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value",
          "unit"
        ],
        "title": "WarehousePerformanceMetric"
      },
      "WarehousePerformanceReport": {
        "properties": {
          "start_date": {
            "type": "integer",
            "title": "Start Date"
          },
          "end_date": {
            "type": "integer",
            "title": "End Date"
          },
          "metrics": {
            "items": {
              "$ref": "#/components/schemas/WarehousePerformanceMetric"
            },
            "type": "array",
            "title": "Metrics"
          }
        },
        "type": "object",
        "required": [
          "start_date",
          "end_date",
          "metrics"
        ],
        "title": "WarehousePerformanceReport"
      },
      "WarehouseStats": {
        "properties": {
          "total_pick_lists": {
            "type": "integer",
            "title": "Total Pick Lists"
          },
          "completed_pick_lists": {
            "type": "integer",
            "title": "Completed Pick Lists"
          },
          "total_receipts": {
            "type": "integer",
            "title": "Total Receipts"
          },
          "completed_receipts": {
            "type": "integer",
            "title": "Completed Receipts"
          },
          "total_shipments": {
            "type": "integer",
            "title": "Total Shipments"
          },
          "completed_shipments": {
            "type": "integer",
            "title": "Completed Shipments"
          }
        },
        "type": "object",
        "required": [
          "total_pick_lists",
          "completed_pick_lists",
          "total_receipts",
          "completed_receipts",
          "total_shipments",
          "completed_shipments"
        ],
        "title": "WarehouseStats"
      },
      "YardLocation": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/YardLocationType"
          },
          "status": {
            "$ref": "#/components/schemas/YardLocationStatus"
          },
          "capacity": {
            "type": "integer",
            "title": "Capacity",
            "default": 1
          },
          "yard_location_id": {
            "type": "integer",
            "title": "Yard Location Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "status",
          "yard_location_id"
        ],
        "title": "YardLocation"
      },
      "YardLocationCapacity": {
        "properties": {
          "yard_location_id": {
            "type": "integer",
            "title": "Yard Location Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "capacity": {
            "type": "integer",
            "title": "Capacity"
          },
          "current_occupancy": {
            "type": "integer",
            "title": "Current Occupancy"
          }
        },
        "type": "object",
        "required": [
          "yard_location_id",
          "name",
          "capacity",
          "current_occupancy"
        ],
        "title": "YardLocationCapacity"
      },
      "YardLocationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/YardLocationType"
          },
          "status": {
            "$ref": "#/components/schemas/YardLocationStatus"
          },
          "capacity": {
            "type": "integer",
            "title": "Capacity",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "status"
        ],
        "title": "YardLocationCreate"
      },
      "YardLocationStatus": {
        "type": "string",
        "enum": [
          "available",
          "occupied"
        ],
        "title": "YardLocationStatus"
      },
      "YardLocationType": {
        "type": "string",
        "enum": [
          "loading",
          "unloading",
          "parking"
        ],
        "title": "YardLocationType"
      },
      "YardLocationUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/YardLocationType"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/YardLocationStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "capacity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity"
          }
        },
        "type": "object",
        "title": "YardLocationUpdate"
      },
      "YardLocationWithAppointments": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/YardLocationType"
          },
          "status": {
            "$ref": "#/components/schemas/YardLocationStatus"
          },
          "capacity": {
            "type": "integer",
            "title": "Capacity",
            "default": 1
          },
          "yard_location_id": {
            "type": "integer",
            "title": "Yard Location Id"
          },
          "appointments": {
            "items": {
              "$ref": "#/components/schemas/DockAppointment"
            },
            "type": "array",
            "title": "Appointments",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "status",
          "yard_location_id"
        ],
        "title": "YardLocationWithAppointments"
      },
      "YardUtilizationReport": {
        "properties": {
          "date": {
            "type": "integer",
            "title": "Date"
          },
          "total_capacity": {
            "type": "integer",
            "title": "Total Capacity"
          },
          "total_utilization": {
            "type": "integer",
            "title": "Total Utilization"
          },
          "utilization_percentage": {
            "type": "number",
            "title": "Utilization Percentage"
          },
          "location_breakdown": {
            "items": {
              "$ref": "#/components/schemas/YardLocationCapacity"
            },
            "type": "array",
            "title": "Location Breakdown"
          }
        },
        "type": "object",
        "required": [
          "date",
          "total_capacity",
          "total_utilization",
          "utilization_percentage",
          "location_breakdown"
        ],
        "title": "YardUtilizationReport"
      },
      "Zone": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "Zone"
      },
      "ZoneCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ZoneCreate"
      },
      "ZoneUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "ZoneUpdate"
      },
      "ZoneWithLocations": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "locations": {
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "type": "array",
            "title": "Locations",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "ZoneWithLocations"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/login/access-token"
          }
        }
      }
    }
  }
}